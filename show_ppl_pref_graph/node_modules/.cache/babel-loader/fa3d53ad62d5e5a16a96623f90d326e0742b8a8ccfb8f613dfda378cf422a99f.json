{"ast":null,"code":"var _jsxFileName = \"C:\\\\tool\\\\git\\\\show_ppl_pref_graph\\\\show_ppl_pref_graph\\\\src\\\\components\\\\Graph.tsx\";\nimport React from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Styles = {\n  graph: {\n    padding: \"12px\"\n  }\n};\n// 選んだ都道府県の人口推移グラフを表示するコンポーネント\nconst Graph = ({\n  populationdata\n}) => {\n  let series = [];\n  let categories = [];\n  for (let p of populationdata) {\n    let data = [];\n    for (let pd of p.data) {\n      data.push(pd.value);\n      categories.push(String(pd.year));\n    }\n    series.push({\n      type: \"line\",\n      name: p.prefName,\n      data: data\n    });\n  }\n  const options = {\n    title: {\n      text: \"undefined\"\n    },\n    xAxis: {\n      title: {\n        text: \"年度\"\n      },\n      categories: categories\n    },\n    yAxis: {\n      lineWidth: 1,\n      tickWidth: 1,\n      title: {\n        text: \"人口数\",\n        align: 'high',\n        offset: 0,\n        rotation: 0,\n        y: -20,\n        style: {\n          fontSize: \"20px\",\n          fontWeight: \"bold\"\n        }\n      }\n    },\n    // 都道府県を一つも選んでいない場合との分岐条件\n    series: series.length === 0 ? [{\n      type: \"line\",\n      name: \"\",\n      data: []\n    }] : series\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: Styles.graph,\n    children: /*#__PURE__*/_jsxDEV(HighchartsReact, {\n      highcharts: Highcharts,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_c = Graph;\nexport default Graph;\nvar _c;\n$RefreshReg$(_c, \"Graph\");","map":{"version":3,"names":["React","Highcharts","HighchartsReact","jsxDEV","_jsxDEV","Styles","graph","padding","Graph","populationdata","series","categories","p","data","pd","push","value","String","year","type","name","prefName","options","title","text","xAxis","yAxis","lineWidth","tickWidth","align","offset","rotation","y","style","fontSize","fontWeight","length","children","highcharts","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/tool/git/show_ppl_pref_graph/show_ppl_pref_graph/src/components/Graph.tsx"],"sourcesContent":["import React from \"react\";\nimport Highcharts from \"highcharts\";\nimport HighchartsReact from \"highcharts-react-official\";\n\nconst Styles: { [key: string]: React.CSSProperties } = {\n  graph: {\n    padding: \"12px\",\n  },\n};\n\ntype Props = {\n  populationdata: {\n    prefName: string;\n    data: { year: number; value: number }[];\n  }[];\n};\n\n// 選んだ都道府県の人口推移グラフを表示するコンポーネント\nconst Graph: React.FC<Props> = ({ populationdata }) => {\n  let series: Highcharts.SeriesOptionsType[] = [];\n  let categories = [];\n\n  for (let p of populationdata) {\n    let data = [];\n\n    for (let pd of p.data) {\n      data.push(pd.value);\n      categories.push(String(pd.year));\n    }\n\n    series.push({\n      type: \"line\",\n      name: p.prefName,\n      data: data,\n    });\n  }\n\n  const options: Highcharts.Options = {\n    title: {\n      text: \"undefined\"\n    },\n    xAxis: {\n      title: {text: \"年度\"},\n      categories: categories,\n    },\n    yAxis: {\n      lineWidth: 1,\n      tickWidth: 1,\n      title: {\n        text: \"人口数\",\n        align: 'high',\n        offset: 0,\n        rotation: 0,\n        y: -20,\n        style: {\n          fontSize: \"20px\",\n          fontWeight: \"bold\"\n        }\n      },\n    },\n    // 都道府県を一つも選んでいない場合との分岐条件\n    series:\n      series.length === 0\n        ? [{ type: \"line\", name: \"\", data: [] }]\n        : series,\n  };\n\n  return (\n    <div style={Styles.graph}>\n      <HighchartsReact highcharts={Highcharts} options={options} />\n    </div>\n  );\n};\n\nexport default Graph;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,YAAY;AACnC,OAAOC,eAAe,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,MAA8C,GAAG;EACrDC,KAAK,EAAE;IACLC,OAAO,EAAE;EACX;AACF,CAAC;AASD;AACA,MAAMC,KAAsB,GAAGA,CAAC;EAAEC;AAAe,CAAC,KAAK;EACrD,IAAIC,MAAsC,GAAG,EAAE;EAC/C,IAAIC,UAAU,GAAG,EAAE;EAEnB,KAAK,IAAIC,CAAC,IAAIH,cAAc,EAAE;IAC5B,IAAII,IAAI,GAAG,EAAE;IAEb,KAAK,IAAIC,EAAE,IAAIF,CAAC,CAACC,IAAI,EAAE;MACrBA,IAAI,CAACE,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MACnBL,UAAU,CAACI,IAAI,CAACE,MAAM,CAACH,EAAE,CAACI,IAAI,CAAC,CAAC;IAClC;IAEAR,MAAM,CAACK,IAAI,CAAC;MACVI,IAAI,EAAE,MAAM;MACZC,IAAI,EAAER,CAAC,CAACS,QAAQ;MAChBR,IAAI,EAAEA;IACR,CAAC,CAAC;EACJ;EAEA,MAAMS,OAA2B,GAAG;IAClCC,KAAK,EAAE;MACLC,IAAI,EAAE;IACR,CAAC;IACDC,KAAK,EAAE;MACLF,KAAK,EAAE;QAACC,IAAI,EAAE;MAAI,CAAC;MACnBb,UAAU,EAAEA;IACd,CAAC;IACDe,KAAK,EAAE;MACLC,SAAS,EAAE,CAAC;MACZC,SAAS,EAAE,CAAC;MACZL,KAAK,EAAE;QACLC,IAAI,EAAE,KAAK;QACXK,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,CAAC;QACTC,QAAQ,EAAE,CAAC;QACXC,CAAC,EAAE,CAAC,EAAE;QACNC,KAAK,EAAE;UACLC,QAAQ,EAAE,MAAM;UAChBC,UAAU,EAAE;QACd;MACF;IACF,CAAC;IACD;IACAzB,MAAM,EACJA,MAAM,CAAC0B,MAAM,KAAK,CAAC,GACf,CAAC;MAAEjB,IAAI,EAAE,MAAM;MAAEC,IAAI,EAAE,EAAE;MAAEP,IAAI,EAAE;IAAG,CAAC,CAAC,GACtCH;EACR,CAAC;EAED,oBACEN,OAAA;IAAK6B,KAAK,EAAE5B,MAAM,CAACC,KAAM;IAAA+B,QAAA,eACvBjC,OAAA,CAACF,eAAe;MAACoC,UAAU,EAAErC,UAAW;MAACqB,OAAO,EAAEA;IAAQ;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1D,CAAC;AAEV,CAAC;AAACC,EAAA,GAtDInC,KAAsB;AAwD5B,eAAeA,KAAK;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}