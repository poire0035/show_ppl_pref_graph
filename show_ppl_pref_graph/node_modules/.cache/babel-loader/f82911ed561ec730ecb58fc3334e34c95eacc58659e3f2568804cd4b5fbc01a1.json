{"ast":null,"code":"var _jsxFileName = \"C:\\\\tool\\\\git\\\\show_ppl_pref_graph\\\\show_ppl_pref_graph\\\\src\\\\checkField.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Styles = {\n  checkcardList: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    padding: '10px',\n    justifyContent: 'flex-start',\n    justifySelf: 'auto'\n  },\n  text: {\n    display: 'contents',\n    marginLeft: '1em',\n    cursor: 'pointer'\n  },\n  checkcard: {\n    borderRadius: '10px',\n    border: 'solid 2px',\n    textAlign: 'center',\n    padding: '4px',\n    margin: '5px 10px'\n  }\n};\n\n// 都道府県一覧のチェックボックスを表示するコンポーネント\nconst CheckField = ({\n  prefectures,\n  onChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: Styles.checkcardList,\n      children: prefectures.map(prefecture => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: Styles.checkcard,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"Prefecture name\",\n          onChange: event => onChange(prefecture.prefName, prefecture.prefCode, event.target.checked),\n          id: 'checkbox' + prefecture.prefCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: Styles.text,\n          htmlFor: 'checkbox' + prefecture.prefCode,\n          children: prefecture.prefName.length === 3 ? ' ' + prefecture.prefName : prefecture.prefName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this)]\n      }, prefecture.prefName, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = CheckField;\nexport default CheckField;\nvar _c;\n$RefreshReg$(_c, \"CheckField\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","Styles","checkcardList","display","flexWrap","padding","justifyContent","justifySelf","text","marginLeft","cursor","checkcard","borderRadius","border","textAlign","margin","CheckField","prefectures","onChange","children","style","map","prefecture","type","name","event","prefName","prefCode","target","checked","id","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","length","_c","$RefreshReg$"],"sources":["C:/tool/git/show_ppl_pref_graph/show_ppl_pref_graph/src/checkField.tsx"],"sourcesContent":["import React from 'react';\n\ntype Props = {\n  prefectures: {\n    prefCode: number;\n    prefName: string;\n  }[];\n\n  onChange: (name: string, prefName: number, check: boolean) => void;\n};\n\nconst Styles: { [key: string]: React.CSSProperties } = {\n  checkcardList: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    padding: '10px',\n    justifyContent: 'flex-start',\n    justifySelf: 'auto',\n  },\n  text: { display: 'contents', marginLeft: '1em', cursor: 'pointer' },\n  checkcard: {\n    borderRadius: '10px',\n    border: 'solid 2px',\n    textAlign: 'center',\n    padding: '4px',\n    margin: '5px 10px'\n  },\n};\n\n// 都道府県一覧のチェックボックスを表示するコンポーネント\nconst CheckField: React.FC<Props> = ({ prefectures, onChange }) => {\n  return (\n    <>\n      <div style={Styles.checkcardList}>\n        {prefectures.map((prefecture) => (\n          <div style={Styles.checkcard} key={prefecture.prefName}>\n            <input\n              type=\"checkbox\"\n              name=\"Prefecture name\"\n              onChange={(event) => onChange(prefecture.prefName, prefecture.prefCode, event.target.checked)}\n              id={'checkbox' + prefecture.prefCode}\n            />\n            <label style={Styles.text} htmlFor={'checkbox' + prefecture.prefCode}>\n              {prefecture.prefName.length === 3 ? ' ' + prefecture.prefName : prefecture.prefName}\n            </label>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default CheckField;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAW1B,MAAMC,MAA8C,GAAG;EACrDC,aAAa,EAAE;IACbC,OAAO,EAAE,MAAM;IACfC,QAAQ,EAAE,MAAM;IAChBC,OAAO,EAAE,MAAM;IACfC,cAAc,EAAE,YAAY;IAC5BC,WAAW,EAAE;EACf,CAAC;EACDC,IAAI,EAAE;IAAEL,OAAO,EAAE,UAAU;IAAEM,UAAU,EAAE,KAAK;IAAEC,MAAM,EAAE;EAAU,CAAC;EACnEC,SAAS,EAAE;IACTC,YAAY,EAAE,MAAM;IACpBC,MAAM,EAAE,WAAW;IACnBC,SAAS,EAAE,QAAQ;IACnBT,OAAO,EAAE,KAAK;IACdU,MAAM,EAAE;EACV;AACF,CAAC;;AAED;AACA,MAAMC,UAA2B,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAS,CAAC,KAAK;EACjE,oBACEpB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACErB,OAAA;MAAKsB,KAAK,EAAEnB,MAAM,CAACC,aAAc;MAAAiB,QAAA,EAC9BF,WAAW,CAACI,GAAG,CAAEC,UAAU,iBAC1BxB,OAAA;QAAKsB,KAAK,EAAEnB,MAAM,CAACU,SAAU;QAAAQ,QAAA,gBAC3BrB,OAAA;UACEyB,IAAI,EAAC,UAAU;UACfC,IAAI,EAAC,iBAAiB;UACtBN,QAAQ,EAAGO,KAAK,IAAKP,QAAQ,CAACI,UAAU,CAACI,QAAQ,EAAEJ,UAAU,CAACK,QAAQ,EAAEF,KAAK,CAACG,MAAM,CAACC,OAAO,CAAE;UAC9FC,EAAE,EAAE,UAAU,GAAGR,UAAU,CAACK;QAAS;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtC,CAAC,eACFpC,OAAA;UAAOsB,KAAK,EAAEnB,MAAM,CAACO,IAAK;UAAC2B,OAAO,EAAE,UAAU,GAAGb,UAAU,CAACK,QAAS;UAAAR,QAAA,EAClEG,UAAU,CAACI,QAAQ,CAACU,MAAM,KAAK,CAAC,GAAG,GAAG,GAAGd,UAAU,CAACI,QAAQ,GAAGJ,UAAU,CAACI;QAAQ;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9E,CAAC;MAAA,GATyBZ,UAAU,CAACI,QAAQ;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUjD,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC,gBACN,CAAC;AAEP,CAAC;AAACG,EAAA,GApBIrB,UAA2B;AAsBjC,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}