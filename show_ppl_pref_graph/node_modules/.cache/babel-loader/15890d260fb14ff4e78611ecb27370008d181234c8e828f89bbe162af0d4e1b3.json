{"ast":null,"code":"var _jsxFileName = \"C:\\\\tool\\\\git\\\\show_ppl_pref_graph\\\\show_ppl_pref_graph\\\\src\\\\components\\\\Main.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport CheckField from \"./CheckField\";\nimport Graph from \"./Graph\";\nimport * as resasApi from '../resasApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Styles = {\n  label: {\n    fontSize: \"20px\",\n    marginLeft: \"10pt\"\n  }\n};\nconst Main = () => {\n  _s();\n  const [prefectures, setPreFectures] = useState(null);\n  const [prefPopulation, setPrefPopulation] = useState([]);\n  useEffect(() => {\n    const getPreFectures = async () => {\n      let preFecturesData = await resasApi.getPreFectures();\n      setPreFectures(preFecturesData);\n    };\n    getPreFectures();\n  }, []);\n\n  // チェックボックスをクリックした際の処理\n  const handleClickCheck = async (prefName, prefCode, check) => {\n    let c_prefPopulation = prefPopulation.slice();\n    if (check) {\n      if (c_prefPopulation.findIndex(value => value.prefName === prefName) !== -1) {\n        return;\n      }\n      let preFecturePplData = await resasApi.getPreFecturePpl(String(prefCode));\n      c_prefPopulation.push({\n        prefName: prefName,\n        data: preFecturePplData\n      });\n    } else {\n      const deleteIndex = c_prefPopulation.findIndex(value => value.prefName === prefName);\n      if (deleteIndex === -1) return;\n      c_prefPopulation.splice(deleteIndex, 1);\n    }\n    setPrefPopulation(c_prefPopulation);\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: Styles.label,\n      children: \"\\u90FD\\u9053\\u5E9C\\u770C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), prefectures && /*#__PURE__*/_jsxDEV(CheckField, {\n      prefectures: prefectures.result,\n      onChange: handleClickCheck\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Graph, {\n      populationdata: prefPopulation\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"/E0EYH+wJRLcLtbHZPizVgqqe0k=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useState","CheckField","Graph","resasApi","jsxDEV","_jsxDEV","Styles","label","fontSize","marginLeft","Main","_s","prefectures","setPreFectures","prefPopulation","setPrefPopulation","getPreFectures","preFecturesData","handleClickCheck","prefName","prefCode","check","c_prefPopulation","slice","findIndex","value","preFecturePplData","getPreFecturePpl","String","push","data","deleteIndex","splice","children","style","fileName","_jsxFileName","lineNumber","columnNumber","result","onChange","populationdata","_c","$RefreshReg$"],"sources":["C:/tool/git/show_ppl_pref_graph/show_ppl_pref_graph/src/components/Main.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport CheckField from \"./CheckField\";\nimport Graph from \"./Graph\";\nimport * as resasApi from '../resasApi'\n\nconst Styles: { [key: string]: React.CSSProperties } = {\n  label: {\n    fontSize: \"20px\",\n    marginLeft: \"10pt\",\n  },\n};\n\nconst Main: React.FC = () => {\n  const [prefectures, setPreFectures] = useState<{\n    message: null;\n    result: {\n      prefCode: number;\n      prefName: string;\n    }[];\n  } | null>(null);\n  const [prefPopulation, setPrefPopulation] = useState<\n    { prefName: string; data: { year: number; value: number }[] }[]\n  >([]);\n\n  useEffect(() => {\n    const getPreFectures = async () => {\n      let preFecturesData = await resasApi.getPreFectures()\n      setPreFectures(preFecturesData);  \n    }\n    getPreFectures()\n  }, []);\n\n  // チェックボックスをクリックした際の処理\n  const handleClickCheck = async (prefName: string, prefCode: number, check: boolean) => {\n    let c_prefPopulation = prefPopulation.slice();\n    if (check) {\n      if (c_prefPopulation.findIndex((value) => value.prefName === prefName) !==　-1) {\n        return;\n      }\n      let preFecturePplData = await resasApi.getPreFecturePpl(String(prefCode))\n      c_prefPopulation.push({\n        prefName: prefName,\n        data: preFecturePplData,\n      });\n    }\n    else {\n      const deleteIndex = c_prefPopulation.findIndex(\n        (value) => value.prefName === prefName\n      );\n      if (deleteIndex === -1) return;\n      c_prefPopulation.splice(deleteIndex, 1);\n    }\n    setPrefPopulation(c_prefPopulation);\n  };\n\n  return (\n    <main>\n      <h2 style={Styles.label}>都道府県</h2>\n      {prefectures && (\n        <CheckField\n          prefectures={prefectures.result}\n          onChange={handleClickCheck}\n        />\n      )}\n      {/* <h2 style={Styles.label}>総人口推移グラフ</h2> */}\n      <Graph populationdata={prefPopulation} />\n    </main>\n  );\n};\n\nexport default Main;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,KAAKC,QAAQ,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,MAA8C,GAAG;EACrDC,KAAK,EAAE;IACLC,QAAQ,EAAE,MAAM;IAChBC,UAAU,EAAE;EACd;AACF,CAAC;AAED,MAAMC,IAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAMpC,IAAI,CAAC;EACf,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAElD,EAAE,CAAC;EAELD,SAAS,CAAC,MAAM;IACd,MAAMiB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAIC,eAAe,GAAG,MAAMd,QAAQ,CAACa,cAAc,CAAC,CAAC;MACrDH,cAAc,CAACI,eAAe,CAAC;IACjC,CAAC;IACDD,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,gBAAgB,GAAG,MAAAA,CAAOC,QAAgB,EAAEC,QAAgB,EAAEC,KAAc,KAAK;IACrF,IAAIC,gBAAgB,GAAGR,cAAc,CAACS,KAAK,CAAC,CAAC;IAC7C,IAAIF,KAAK,EAAE;MACT,IAAIC,gBAAgB,CAACE,SAAS,CAAEC,KAAK,IAAKA,KAAK,CAACN,QAAQ,KAAKA,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE;QAC7E;MACF;MACA,IAAIO,iBAAiB,GAAG,MAAMvB,QAAQ,CAACwB,gBAAgB,CAACC,MAAM,CAACR,QAAQ,CAAC,CAAC;MACzEE,gBAAgB,CAACO,IAAI,CAAC;QACpBV,QAAQ,EAAEA,QAAQ;QAClBW,IAAI,EAAEJ;MACR,CAAC,CAAC;IACJ,CAAC,MACI;MACH,MAAMK,WAAW,GAAGT,gBAAgB,CAACE,SAAS,CAC3CC,KAAK,IAAKA,KAAK,CAACN,QAAQ,KAAKA,QAChC,CAAC;MACD,IAAIY,WAAW,KAAK,CAAC,CAAC,EAAE;MACxBT,gBAAgB,CAACU,MAAM,CAACD,WAAW,EAAE,CAAC,CAAC;IACzC;IACAhB,iBAAiB,CAACO,gBAAgB,CAAC;EACrC,CAAC;EAED,oBACEjB,OAAA;IAAA4B,QAAA,gBACE5B,OAAA;MAAI6B,KAAK,EAAE5B,MAAM,CAACC,KAAM;MAAA0B,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjC1B,WAAW,iBACVP,OAAA,CAACJ,UAAU;MACTW,WAAW,EAAEA,WAAW,CAAC2B,MAAO;MAChCC,QAAQ,EAAEtB;IAAiB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CACF,eAEDjC,OAAA,CAACH,KAAK;MAACuC,cAAc,EAAE3B;IAAe;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEX,CAAC;AAAC3B,EAAA,CAxDID,IAAc;AAAAgC,EAAA,GAAdhC,IAAc;AA0DpB,eAAeA,IAAI;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}